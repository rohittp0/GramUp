name: Build

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the dev branch
  push:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    name: Build Gramup on ${{ matrix.os }}
    # The type of runner that the job will run on
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller
      - name: Get runner OS
        env:
          OS_FILENAME: '${{ runner.os }}-app'    
      - name: Build with pyinstaller 
        run: pyinstaller --clean -y -F -n '$OS_FILENAME' gramup/__main__.py 
        shell: bash
      - uses: actions/upload-artifact@master
        with:
          name: created_files
          path: dist  

  commit:
    name: Commit created files
    needs: build
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@master
        with:
          name: created_files 
          path: dist
      - name: Setup Git
        run: |
          git config --global user.name 'Rohit T P'
          git config --global user.email 'rohittp0@users.noreply.github.com'
      - name: Add
        run: git add dist/*
      - name: Commit
        run: |
          git commit -am "Automated build"
          git push
